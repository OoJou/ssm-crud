<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
            http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
            http://www.springframework.org/schema/context   
            http://www.springframework.org/schema/context/spring-context-3.2.xsd  
            http://www.springframework.org/schema/mvc  
            http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
            http://www.springframework.org/schema/util  
            http://www.springframework.org/schema/util/spring-util-3.2.xsd">

	<!-- 1.SpringMVC的配置文件，包含网站跳转的逻辑控制，controller包 -->
	<context:component-scan base-package="com.OoJou"
		use-default-filters="false">
		<!-- 只扫描控制器，controller注解 ,上面false禁用 -->
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 2.视图解析器,方便页面的返回 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- prefix：访问页面的前缀，指定页面存放的文件夹，/默认是webapp或者是WebContent -->
		<property name="prefix" value="/"></property>
		<!-- suffix：是指文件的后缀名 -->
		<property name="suffix" value=".jsp"></property>
	</bean>

	<!-- 3.两个标准配置 -->
	<!-- 将SpringMVC不能处理的请求url交给tomcat -->
	<!-- 加了类型转换器，静态资源 使用此种方法解析 它的意思就是没有映射到的URL交给默认的web容器中的servlet进行处理， 要在web.xml里配置静态资源映射，没配置默认资源映射时，被拦截器拦截到就无法解析 -->
	<mvc:default-servlet-handler />
	<!-- 能支持SpringMVC更高级的一些功能，如JSR303校验，快捷的ajax -->
	<mvc:annotation-driven />

</beans>